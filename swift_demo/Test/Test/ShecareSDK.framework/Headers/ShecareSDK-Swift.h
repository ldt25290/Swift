#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ShecareSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

/// 蓝牙连接类型
typedef SWIFT_ENUM(NSInteger, BLEConnectType, closed) {
/// 绑定页的连接，可以连接所有设备
  BLEConnectTypeBinding = 0,
/// 非绑定页的连接，只能连接已绑定的设备
  BLEConnectTypeNotBinding = 1,
};

/// 用户硬件镜像版本
typedef SWIFT_ENUM(NSInteger, BLEFirmwareImageType, closed) {
/// 未知版本
  BLEFirmwareImageTypeUnknown = 0,
/// A 版本
  BLEFirmwareImageTypeTypeA = 1,
/// B 版本
  BLEFirmwareImageTypeTypeB = 2,
};

typedef SWIFT_ENUM(NSInteger, BLEMeasureFlag, closed) {
  BLEMeasureFlagOnline = 0,
  BLEMeasureFlagOfflineBegin = 1,
  BLEMeasureFlagOfflineEnd = 2,
  BLEMeasureFlagUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, BLENotifyType, closed) {
  BLENotifyTypeSetTemperatureUnitC = 0,
  BLENotifyTypeSetTemperatureUnitF = 1,
  BLENotifyTypeTransmitTemperature = 2,
  BLENotifyTypeTemperatureCount = 3,
  BLENotifyTypeThermometerPower = 4,
};

typedef SWIFT_ENUM(NSInteger, BLEState, closed) {
  BLEStateValid = 0,
  BLEStateUnknown = 1,
  BLEStateUnsupported = 2,
  BLEStateUnauthorized = 3,
  BLEStatePoweredOff = 4,
  BLEStateResetting = 5,
};

@class Thermometer;
@class CBPeripheral;

SWIFT_PROTOCOL("_TtP10ShecareSDK22BLEThermometerDelegate_")
@protocol BLEThermometerDelegate
- (void)connectUnBindedHardware:(NSString * _Nonnull)macAddress;
- (void)bleThermometerDidUpdateState:(Thermometer * _Nonnull)bleThermometer;
@optional
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didFailToConnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didDisconnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@required
/// 返回温度数据的代理方法
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didUpload:(double)temperature time:(NSString * _Nonnull)time flag:(enum BLEMeasureFlag)flag dataStr:(NSString * _Nonnull)dataStr;
@optional
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didConnect:(CBPeripheral * _Nonnull)peripheral;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didStartScan:(NSString * _Nonnull)info;
- (void)bleThermometerDidStopScan:(Thermometer * _Nonnull)bleThermometer;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetDefaultProperties:(NSString * _Nonnull)info;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetTemperatureUnit:(BOOL)success;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetFirmwareVersion:(NSString * _Nonnull)firmwareVersion;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetThermometerTime:(BOOL)success;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetTemperatureIndication:(NSString * _Nonnull)indication;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetThermometerPower:(double)value;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didAsynchroizationTimeFromLocal:(NSString * _Nonnull)info;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didReadFirmwareImageType:(enum BLEFirmwareImageType)type;
@end






@interface NSError (SWIFT_EXTENSION(ShecareSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull unknownError;)
+ (NSError * _Nonnull)unknownError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull serverError;)
+ (NSError * _Nonnull)serverError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull unbindError;)
+ (NSError * _Nonnull)unbindError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull bindedByOthersError;)
+ (NSError * _Nonnull)bindedByOthersError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull userIdentifierIsNull;)
+ (NSError * _Nonnull)userIdentifierIsNull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull applicationIdentifierIsNull;)
+ (NSError * _Nonnull)applicationIdentifierIsNull SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)errorWithCode:(NSInteger)code message:(NSString * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end





enum YCEnvironment : NSInteger;
@class YCTemperatureModel;
@class YCPeriodModel;
@class YCUserInfoModel;
@class NSDictionary;
@class YCSLHPaperModel;

SWIFT_CLASS("_TtC10ShecareSDK14ShecareService")
@interface ShecareService : NSObject
/// 设置 SDK 环境，可以不设置。默认是 线上环境 .release
@property (nonatomic) enum YCEnvironment environment;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 单例
+ (ShecareService * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 设置 UserID
/// \param identifier App 用户标识符，由 App 提供
///
- (void)setUserIdentifier:(NSString * _Nonnull)identifier;
/// 设置 appID
/// \param identifier 由 SaaS 服务端提供
///
- (void)setApplicationIdentifier:(NSString * _Nonnull)identifier;
/// 设置 appSecret
/// \param identifier 由 SaaS 服务端提供
///
- (void)setApplicationSecret:(NSString * _Nonnull)identifier;
/// 判断 SDK 是否需要数据初始化
///
/// returns:
///
/// 返回 true 时，App 需要调用 initData 方法进行数据初始化
- (BOOL)needInitData SWIFT_WARN_UNUSED_RESULT;
/// 数据初始化。
/// \param temperatures 用户的体温数据，可为空
///
/// \param periods：用户的经期数据，可为空 
///
/// \param userInfo：用户的基础生理信息，不可为空 
///
/// \param completion：完成回调 
///
- (void)initDataWithTemperatures:(NSArray<YCTemperatureModel *> * _Nullable)temperatures periods:(NSArray<YCPeriodModel *> * _Nullable)periods userInfo:(YCUserInfoModel * _Nonnull)userInfo completion:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_METHOD_FAMILY(none);
/// 新增、更新、删除温度。触发时机：用户进行体温修改时
/// \param temperatures 用户操作的体温数据。SDK 会根据传入的数据自动决定操作类型，详见 YCTemperatureModel 类定义
///
/// \param completion：完成回调 
///
- (void)uploadWithTemperatures:(NSArray<YCTemperatureModel *> * _Nullable)temperatures completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 新增、更新、删除经期记录。触发时机：用户修改经期数据时
/// \param periods：用户操作的经期数据。SDK 会根据传入的数据自动决定操作类型，详见 YCPeriodModel 类定义 
///
/// \param completion：完成回调 
///
- (void)uploadWithPeriods:(NSArray<YCPeriodModel *> * _Nullable)periods completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 新增、更新用户基础生理信息。触发时机：用户修改基础生理信息时。一个用户只能有一组基础生理信息
/// \param userInfo：用户的基础生理信息，不可为空 
///
/// \param completion：完成回调 
///
- (void)uploadWithUserInfo:(YCUserInfoModel * _Nonnull)userInfo completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 返回基础体温曲线页面 URL 路径，App 端使用 WebView 加载此路径即可
///
/// returns:
///
/// 返回基础体温曲线页面 URL
- (NSString * _Nonnull)temperatureCharts SWIFT_WARN_UNUSED_RESULT;
/// 智能分析接口
/// \param completion：完成回调 
///
/// \param error 错误信息
///
/// \param result 智能分析结果
///
- (void)analysis:(void (^ _Nonnull)(NSError * _Nullable, NSDictionary * _Nullable))completion;
/// \param macAddress：需要解绑的设备 MAC 地址 
///
- (void)unBindWithMacAddress:(NSString * _Nonnull)macAddress completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// \param model：需要上传并分析的试纸 Model 
///
/// \param completion 完成回调
///
- (void)uploadLHPapers:(YCSLHPaperModel * _Nonnull)model completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@end



@class CBCharacteristic;

SWIFT_CLASS("_TtC10ShecareSDK11Thermometer")
@interface Thermometer : NSObject
@property (nonatomic, strong) CBPeripheral * _Nullable activePeripheral;
@property (nonatomic, copy) NSString * _Nonnull firmwareVersion;
@property (nonatomic) BOOL isOADing;
@property (nonatomic) uint16_t imgVersion;
@property (nonatomic, weak) id <BLEThermometerDelegate> _Nullable delegate;
@property (nonatomic, strong) CBCharacteristic * _Nullable imageTypeChar;
@property (nonatomic, strong) CBCharacteristic * _Nullable oadBlockRequestChar;
@property (nonatomic) NSInteger oadResponseCount;
@property (nonatomic, copy) void (^ _Nullable oadAction)(Thermometer * _Nonnull, NSInteger);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 单例
+ (Thermometer * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)scanWithType:(enum BLEConnectType)type macList:(NSString * _Nonnull)macList;
- (enum BLEState)bleState SWIFT_WARN_UNUSED_RESULT;
- (void)asynchroizationTimeFromLocalWithDate:(NSDate * _Nonnull)date;
- (void)setNotifyValueWithType:(enum BLENotifyType)type value:(uint8_t)value;
@end



@class CBService;

@interface Thermometer (SWIFT_EXTENSION(ShecareSDK)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface Thermometer (SWIFT_EXTENSION(ShecareSDK)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end























@protocol YCBindViewControllerDelegate;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ShecareSDK20YCBindViewController")
@interface YCBindViewController : UIViewController
/// 代理
@property (nonatomic, weak) id <YCBindViewControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP10ShecareSDK28YCBindViewControllerDelegate_")
@protocol YCBindViewControllerDelegate <NSObject>
- (void)bindViewController:(YCBindViewController * _Nonnull)bindViewController didBind:(NSString * _Nonnull)macAddress error:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, YCEnvironment, closed) {
/// 正式服务器
  YCEnvironmentRelease = 0,
/// 测试服务器
  YCEnvironmentTester = 1,
};


SWIFT_CLASS("_TtC10ShecareSDK13YCPeriodModel")
@interface YCPeriodModel : NSObject
/// 是否已删除
@property (nonatomic) BOOL deleted;
/// 记录日期
@property (nonatomic, strong) NSDate * _Nullable date;
/// 经期信息：1 表示经期开始，2 表示经期结束，0 表示删除经期或无经期信息。经期开始和结束应该成对出现
@property (nonatomic) NSInteger period;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param date 日期
///
/// \param period 经期信息，1 表示经期开始，2 表示经期结束，0 表示没有经期。经期开始和结束应该成对出现
///
/// \param deleted 是否删除该温度。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date period:(NSInteger)period deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class NSString;

SWIFT_CLASS("_TtC10ShecareSDK15YCSLHPaperModel")
@interface YCSLHPaperModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param paperID 试纸 ID。需保证唯一性
///
/// \param time 试纸的测试时间。⚠️不能为空⚠️
///
/// \param type 试纸的类型，0：没有 1：大卫 2：金秀儿 3: 其他 4：大卫半定量试纸 5：金秀儿半定量试纸 6，秀儿 7，伊仕半定量
///
/// \param imageData 试纸图片数据
///
/// \param deleted 是否删除该试纸。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithPaperID:(NSString * _Nonnull)paperID time:(NSDate * _Nonnull)time type:(NSInteger)type imageData:(NSData * _Nonnull)imageData deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10ShecareSDK18YCTemperatureModel")
@interface YCTemperatureModel : NSObject
/// 是否已删除
@property (nonatomic) BOOL deleted;
/// 测温时间
@property (nonatomic, strong) NSDate * _Nullable measureTime;
/// 温度数据
@property (nonatomic, strong) NSString * _Nonnull temperature;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param temperature 温度
///
/// \param measureTime 温度的测量时间。⚠️不能为空⚠️
///
/// \param deleted 是否删除该温度。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithTemperature:(NSString * _Nonnull)temperature measureTime:(NSDate * _Nonnull)date deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10ShecareSDK15YCUserInfoModel")
@interface YCUserInfoModel : NSObject
/// 周期长度，默认值 28
@property (nonatomic) float cycleLength;
/// 经期长度，默认值 5
@property (nonatomic) float mensLength;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param cycleLength 周期长度
///
/// \param mensLength 经期长度
///
- (nonnull instancetype)initWithCycleLength:(NSInteger)cycleLength mensLength:(NSInteger)mensLength;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ShecareSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

/// 蓝牙连接类型
typedef SWIFT_ENUM(NSInteger, BLEConnectType, closed) {
/// 绑定页的连接，可以连接所有设备
  BLEConnectTypeBinding = 0,
/// 非绑定页的连接，只能连接已绑定的设备
  BLEConnectTypeNotBinding = 1,
};

/// 用户硬件镜像版本
typedef SWIFT_ENUM(NSInteger, BLEFirmwareImageType, closed) {
/// 未知版本
  BLEFirmwareImageTypeUnknown = 0,
/// A 版本
  BLEFirmwareImageTypeTypeA = 1,
/// B 版本
  BLEFirmwareImageTypeTypeB = 2,
};

typedef SWIFT_ENUM(NSInteger, BLEMeasureFlag, closed) {
  BLEMeasureFlagOnline = 0,
  BLEMeasureFlagOfflineBegin = 1,
  BLEMeasureFlagOfflineEnd = 2,
  BLEMeasureFlagUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, BLENotifyType, closed) {
  BLENotifyTypeSetTemperatureUnitC = 0,
  BLENotifyTypeSetTemperatureUnitF = 1,
  BLENotifyTypeTransmitTemperature = 2,
  BLENotifyTypeTemperatureCount = 3,
  BLENotifyTypeThermometerPower = 4,
};

typedef SWIFT_ENUM(NSInteger, BLEState, closed) {
  BLEStateValid = 0,
  BLEStateUnknown = 1,
  BLEStateUnsupported = 2,
  BLEStateUnauthorized = 3,
  BLEStatePoweredOff = 4,
  BLEStateResetting = 5,
};

@class Thermometer;
@class CBPeripheral;

SWIFT_PROTOCOL("_TtP10ShecareSDK22BLEThermometerDelegate_")
@protocol BLEThermometerDelegate
- (void)connectUnBindedHardware:(NSString * _Nonnull)macAddress;
- (void)bleThermometerDidUpdateState:(Thermometer * _Nonnull)bleThermometer;
@optional
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didFailToConnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didDisconnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@required
/// 返回温度数据的代理方法
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didUpload:(double)temperature time:(NSString * _Nonnull)time flag:(enum BLEMeasureFlag)flag dataStr:(NSString * _Nonnull)dataStr;
@optional
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didConnect:(CBPeripheral * _Nonnull)peripheral;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didStartScan:(NSString * _Nonnull)info;
- (void)bleThermometerDidStopScan:(Thermometer * _Nonnull)bleThermometer;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetDefaultProperties:(NSString * _Nonnull)info;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetTemperatureUnit:(BOOL)success;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetFirmwareVersion:(NSString * _Nonnull)firmwareVersion;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didSetThermometerTime:(BOOL)success;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetTemperatureIndication:(NSString * _Nonnull)indication;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didGetThermometerPower:(double)value;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didAsynchroizationTimeFromLocal:(NSString * _Nonnull)info;
- (void)bleThermometer:(Thermometer * _Nonnull)bleThermometer didReadFirmwareImageType:(enum BLEFirmwareImageType)type;
@end






@interface NSError (SWIFT_EXTENSION(ShecareSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull unknownError;)
+ (NSError * _Nonnull)unknownError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull serverError;)
+ (NSError * _Nonnull)serverError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull unbindError;)
+ (NSError * _Nonnull)unbindError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull bindedByOthersError;)
+ (NSError * _Nonnull)bindedByOthersError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull userIdentifierIsNull;)
+ (NSError * _Nonnull)userIdentifierIsNull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSError * _Nonnull applicationIdentifierIsNull;)
+ (NSError * _Nonnull)applicationIdentifierIsNull SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)errorWithCode:(NSInteger)code message:(NSString * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end





enum YCEnvironment : NSInteger;
@class YCTemperatureModel;
@class YCPeriodModel;
@class YCUserInfoModel;
@class NSDictionary;
@class YCSLHPaperModel;

SWIFT_CLASS("_TtC10ShecareSDK14ShecareService")
@interface ShecareService : NSObject
/// 设置 SDK 环境，可以不设置。默认是 线上环境 .release
@property (nonatomic) enum YCEnvironment environment;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 单例
+ (ShecareService * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 设置 UserID
/// \param identifier App 用户标识符，由 App 提供
///
- (void)setUserIdentifier:(NSString * _Nonnull)identifier;
/// 设置 appID
/// \param identifier 由 SaaS 服务端提供
///
- (void)setApplicationIdentifier:(NSString * _Nonnull)identifier;
/// 设置 appSecret
/// \param identifier 由 SaaS 服务端提供
///
- (void)setApplicationSecret:(NSString * _Nonnull)identifier;
/// 判断 SDK 是否需要数据初始化
///
/// returns:
///
/// 返回 true 时，App 需要调用 initData 方法进行数据初始化
- (BOOL)needInitData SWIFT_WARN_UNUSED_RESULT;
/// 数据初始化。
/// \param temperatures 用户的体温数据，可为空
///
/// \param periods：用户的经期数据，可为空 
///
/// \param userInfo：用户的基础生理信息，不可为空 
///
/// \param completion：完成回调 
///
- (void)initDataWithTemperatures:(NSArray<YCTemperatureModel *> * _Nullable)temperatures periods:(NSArray<YCPeriodModel *> * _Nullable)periods userInfo:(YCUserInfoModel * _Nonnull)userInfo completion:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_METHOD_FAMILY(none);
/// 新增、更新、删除温度。触发时机：用户进行体温修改时
/// \param temperatures 用户操作的体温数据。SDK 会根据传入的数据自动决定操作类型，详见 YCTemperatureModel 类定义
///
/// \param completion：完成回调 
///
- (void)uploadWithTemperatures:(NSArray<YCTemperatureModel *> * _Nullable)temperatures completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 新增、更新、删除经期记录。触发时机：用户修改经期数据时
/// \param periods：用户操作的经期数据。SDK 会根据传入的数据自动决定操作类型，详见 YCPeriodModel 类定义 
///
/// \param completion：完成回调 
///
- (void)uploadWithPeriods:(NSArray<YCPeriodModel *> * _Nullable)periods completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 新增、更新用户基础生理信息。触发时机：用户修改基础生理信息时。一个用户只能有一组基础生理信息
/// \param userInfo：用户的基础生理信息，不可为空 
///
/// \param completion：完成回调 
///
- (void)uploadWithUserInfo:(YCUserInfoModel * _Nonnull)userInfo completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// 返回基础体温曲线页面 URL 路径，App 端使用 WebView 加载此路径即可
///
/// returns:
///
/// 返回基础体温曲线页面 URL
- (NSString * _Nonnull)temperatureCharts SWIFT_WARN_UNUSED_RESULT;
/// 智能分析接口
/// \param completion：完成回调 
///
/// \param error 错误信息
///
/// \param result 智能分析结果
///
- (void)analysis:(void (^ _Nonnull)(NSError * _Nullable, NSDictionary * _Nullable))completion;
/// \param macAddress：需要解绑的设备 MAC 地址 
///
- (void)unBindWithMacAddress:(NSString * _Nonnull)macAddress completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// \param model：需要上传并分析的试纸 Model 
///
/// \param completion 完成回调
///
- (void)uploadLHPapers:(YCSLHPaperModel * _Nonnull)model completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@end



@class CBCharacteristic;

SWIFT_CLASS("_TtC10ShecareSDK11Thermometer")
@interface Thermometer : NSObject
@property (nonatomic, strong) CBPeripheral * _Nullable activePeripheral;
@property (nonatomic, copy) NSString * _Nonnull firmwareVersion;
@property (nonatomic) BOOL isOADing;
@property (nonatomic) uint16_t imgVersion;
@property (nonatomic, weak) id <BLEThermometerDelegate> _Nullable delegate;
@property (nonatomic, strong) CBCharacteristic * _Nullable imageTypeChar;
@property (nonatomic, strong) CBCharacteristic * _Nullable oadBlockRequestChar;
@property (nonatomic) NSInteger oadResponseCount;
@property (nonatomic, copy) void (^ _Nullable oadAction)(Thermometer * _Nonnull, NSInteger);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 单例
+ (Thermometer * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)scanWithType:(enum BLEConnectType)type macList:(NSString * _Nonnull)macList;
- (enum BLEState)bleState SWIFT_WARN_UNUSED_RESULT;
- (void)asynchroizationTimeFromLocalWithDate:(NSDate * _Nonnull)date;
- (void)setNotifyValueWithType:(enum BLENotifyType)type value:(uint8_t)value;
@end



@class CBService;

@interface Thermometer (SWIFT_EXTENSION(ShecareSDK)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface Thermometer (SWIFT_EXTENSION(ShecareSDK)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end























@protocol YCBindViewControllerDelegate;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ShecareSDK20YCBindViewController")
@interface YCBindViewController : UIViewController
/// 代理
@property (nonatomic, weak) id <YCBindViewControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP10ShecareSDK28YCBindViewControllerDelegate_")
@protocol YCBindViewControllerDelegate <NSObject>
- (void)bindViewController:(YCBindViewController * _Nonnull)bindViewController didBind:(NSString * _Nonnull)macAddress error:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, YCEnvironment, closed) {
/// 正式服务器
  YCEnvironmentRelease = 0,
/// 测试服务器
  YCEnvironmentTester = 1,
};


SWIFT_CLASS("_TtC10ShecareSDK13YCPeriodModel")
@interface YCPeriodModel : NSObject
/// 是否已删除
@property (nonatomic) BOOL deleted;
/// 记录日期
@property (nonatomic, strong) NSDate * _Nullable date;
/// 经期信息：1 表示经期开始，2 表示经期结束，0 表示删除经期或无经期信息。经期开始和结束应该成对出现
@property (nonatomic) NSInteger period;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param date 日期
///
/// \param period 经期信息，1 表示经期开始，2 表示经期结束，0 表示没有经期。经期开始和结束应该成对出现
///
/// \param deleted 是否删除该温度。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date period:(NSInteger)period deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class NSString;

SWIFT_CLASS("_TtC10ShecareSDK15YCSLHPaperModel")
@interface YCSLHPaperModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param paperID 试纸 ID。需保证唯一性
///
/// \param time 试纸的测试时间。⚠️不能为空⚠️
///
/// \param type 试纸的类型，0：没有 1：大卫 2：金秀儿 3: 其他 4：大卫半定量试纸 5：金秀儿半定量试纸 6，秀儿 7，伊仕半定量
///
/// \param imageData 试纸图片数据
///
/// \param deleted 是否删除该试纸。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithPaperID:(NSString * _Nonnull)paperID time:(NSDate * _Nonnull)time type:(NSInteger)type imageData:(NSData * _Nonnull)imageData deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10ShecareSDK18YCTemperatureModel")
@interface YCTemperatureModel : NSObject
/// 是否已删除
@property (nonatomic) BOOL deleted;
/// 测温时间
@property (nonatomic, strong) NSDate * _Nullable measureTime;
/// 温度数据
@property (nonatomic, strong) NSString * _Nonnull temperature;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param temperature 温度
///
/// \param measureTime 温度的测量时间。⚠️不能为空⚠️
///
/// \param deleted 是否删除该温度。true 表示删除，false 表示不删除
///
- (nonnull instancetype)initWithTemperature:(NSString * _Nonnull)temperature measureTime:(NSDate * _Nonnull)date deleted:(BOOL)deleted;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10ShecareSDK15YCUserInfoModel")
@interface YCUserInfoModel : NSObject
/// 周期长度，默认值 28
@property (nonatomic) float cycleLength;
/// 经期长度，默认值 5
@property (nonatomic) float mensLength;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// 构造方法
/// \param cycleLength 周期长度
///
/// \param mensLength 经期长度
///
- (nonnull instancetype)initWithCycleLength:(NSInteger)cycleLength mensLength:(NSInteger)mensLength;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
